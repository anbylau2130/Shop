<%@ CodeTemplate Inherits="CodeTemplate"TargetLanguage="Text" Description="NetTiers main template."Debug="True" ResponseEncoding="UTF-8"%>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>

<%-- 要打印的表 --%>
<%@ Property Name="Table" Type="TableSchema" DeepLoad="True" Optional="False" Category="01. Getting Started - Required" Description="Database that the tables views, and stored procedures shouldbe based on. IMPORTANT!!! If SourceTables and SourceViews are left blank, theEntire Database will then be generated." %>
<%@ Property Name="Area" Type="String" DeepLoad="True" Optional="False" Category="01. Getting Started - Required" Description="Database that the tables views, and stored procedures shouldbe based on. IMPORTANT!!! If SourceTables and SourceViews are left blank, theEntire Database will then be generated." %>
<%@ Property Name="Controller" Type="String" DeepLoad="True" Optional="False" Category="01. Getting Started - Required" Description="Database that the tables views, and stored procedures shouldbe based on. IMPORTANT!!! If SourceTables and SourceViews are left blank, theEntire Database will then be generated." %>
<%@ Property Name="Action" Type="String" DeepLoad="True" Optional="False" Category="01. Getting Started - Required" Description="Database that the tables views, and stored procedures shouldbe based on. IMPORTANT!!! If SourceTables and SourceViews are left blank, theEntire Database will then be generated." %>


@model USP.Models.Entity.<%=Controller%>
@{
    ViewBag.Title = "<%=Action%>";
}

@section themes{
    <link href="~/Static/Css/shop/usp.<%=Controller.ToLower()%>.<%=Action.ToLower()%>.css" rel="stylesheet" />
}

<div id="p" class="easyui-panel" style="width: 100%; height: 100%">
    <div class="panel panel-info">
        <div class="panel-heading">
            完善公司信息
            <button id="btnReturn" type="button" class="btn btn-primary btn-xs pull-right">返回</button>
        </div>
        <div class="panel-body panel-fit">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form form-horizontal" role="form">
                    <fieldset id="flt-baseInfo">
                        <legend>基础信息</legend>
                        <div class="form-group" >
                           <%foreach(ColumnSchema col in Table.Columns){ %>
                             <div class="form-group" id="fg-<%=col.Name %>">
                                  @Html.LabelFor(model => model.<%=col.Name %>, htmlAttributes: new { @class = "control-label col-md-2" })
                                  <div class="col-md-9">
                                      @Html.EditorFor(model => model.<%=col.Name %>, new { htmlAttributes = new { @class = "form-control" } })
                                      @Html.ValidationMessageFor(model => model.<%=col.Name %>, "", new { @class = "text-danger" })
                                  </div>
                            </div>
                             <%} %>
                        </div>
                    </fieldset>

                    <div class="form-group form-actions">
                        <div class="col-md-offset-2 col-xs-4 ">
                            <button type="submit" class="btn btn-primary">保存</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Static/Js/shop/usp.shop.<%=Controller.ToLower()%>.<%=Action.ToLower()%>.js"></script>
   
    <script type="text/javascript">
     (function () {
    usp.namespace("usp.shop.<%=Controller.ToLower()%>.<%=Action.ToLower()%>");
    usp.shop.<%=Controller.ToLower()%>.<%=Action.ToLower()%> = {
        init: function (btnReturnId, basePage) {
            $(".datepicker").datetimepicker({
                format: 'YYYY-MM-DD'
            });

            usp.shop.<%=Controller.ToLower()%>.<%=Action.ToLower()%>.eventInit.btnReturnInit(btnReturnId, basePage);
        },
        eventInit: {
            btnReturnInit: function (id, basePage) {
                $(id).on("click", function () {
                    location.href = basePage;
                    return false;
                });
            }
        },
       <%-- initFileUpload:function (id, uploadUrl, filename,hiddenid) {
            $(id).fileinput({
            language: 'zh', //设置语言
            uploadUrl: uploadUrl, //上传的地址
            allowedFileExtensions: ['jpg', 'png', 'gif'], //接收的文件后缀
            showUpload: false, //是否显示上传按钮
            showCaption: false, //是否显示标题
            browseClass: "btn btn-primary", //按钮样式
            previewFileIcon: "<i class='glyphicon glyphicon-king'></i>",
            initialPreview: [ //预览图片的设置
                filename!=''? "<img src='"+filename+"' class='file-preview-image' alt='Logo' title='Logo'>":""
            ]
        });
        $(id).on("fileuploaded", function (event, data, previewId, index) {
            if (data.jqXHR.responseJSON.IsSuccess) {
                $(hiddenid).val(data.jqXHR.responseJSON.FileName);
            } else {
                toastr.error(data.jqXHR.responseJSON.Msg);
            }
        });
    }--%>
    }
})(this);
        $(function () {
            usp.init();
            <%--usp.<%=Controller.ToLower()%>.<%=Action.ToLower()%>.initFileUpload('#LogoIconfileUpload', "../../System/FileUpload/Upload", '@Model.LogoIcon', "#LogoIcon");
            usp.<%=Controller.ToLower()%>.<%=Action.ToLower()%>.initFileUpload('#LogoUrlfileUpload', "../../System/FileUpload/Upload", '@Model.LogoUrl', "#LogoUrl");--%>
            usp.<%=Controller.ToLower()%>.<%=Action.ToLower()%>.init(
                "#btnReturn",
                "/<%=Area%>/<%=Controller%>/<%=Action%>"
                );
        })
    </script>
}






/////////////////////////////////////////////////////////////////////////////

        [Privilege(Menu = "公司列表", Name = "修改")]
        public ActionResult Edit(string id)
        {
            long idParse;
            <%=Controller%> model = new <%=Controller%>();
            if (long.TryParse(id, out idParse))
            {
                model = <%=Controller.ToString().Substring(0,1).ToLower()+Controller.ToString().Substring(1,Controller.Length-1)%>Bll.GetModelById(idParse);
            }
          <%--  ViewData["CorpTypeList"] = dropDownListService.InitCorpTypeDropDownList();--%>
            return View(model);
        }

        [HttpPost]
        public ActionResult Edit(<%=Controller%> model)
        {
            var currentUser = HttpContext.Session[Constants.USER_KEY] as USP.Models.POCO.User;
            model.Creator = currentUser.SysOperator.ID;
            model.CreateTime = DateTime.Now;
            model.Auditor = null;
            model.AuditTime = null;
            if (ModelState.IsValid)
            {
                if (<%=Controller.ToString().Substring(0,1).ToLower()+Controller.ToString().Substring(1,Controller.Length-1)%>Bll.Edit(model))
                {
                    TempData["isSuccess"] = "true";
                    TempData["MessageInfo"] = "完善信息成功!";
                    return View("Index");
                }
            }
            TempData["isSuccess"] = "false";
            TempData["MessageInfo"] = "完善信息失败!";
            <%--ViewData["CorpTypeList"] = dropDownListService.InitCorpTypeDropDownList();--%>
            return View(model);
        }

      
        [Privilege(Menu = "公司类型", Name = "注销")]
        [HttpPost]
        public ActionResult Cancel(int id)
        {
            return Json(<%=Controller.ToString().Substring(0,1).ToLower()+Controller.ToString().Substring(1,Controller.Length-1)%>Bll.Cancel(id, ((User)HttpContext.Session[Common.Constants.USER_KEY]).SysOperator.ID));
        }

        [Privilege(Menu = "公司类型", Name = "激活")]
        [HttpPost]
        public ActionResult Active(int id)
        {
            return Json(<%=Controller.ToString().Substring(0,1).ToLower()+Controller.ToString().Substring(1,Controller.Length-1)%>Bll.Active(id, ((User)HttpContext.Session[Common.Constants.USER_KEY]).SysOperator.ID));
        }



<script runat="template">

//将数据库类型转化为C#类型

public string DataType2CSharpType(System.Data.DbType dbType)

{

    switch (dbType)

    {

        case DbType.AnsiString:

            return "string";

        case DbType.AnsiStringFixedLength:

            return "string";

        case DbType.Binary:

            return "byte[]";

        case DbType.Boolean:

            return "bool";

        case DbType.Byte:

            return "byte";

        case DbType.Currency:

            return "decimal";

        case DbType.Date:

            return "DateTime";

        case DbType.DateTime:

            return "DateTime";

        case DbType.DateTime2:

            return "DateTime";

        case DbType.DateTimeOffset:

            return "DateTime";

        case DbType.Decimal:

            return "decimal";

        case DbType.Double:

            return "double";

        case DbType.Guid:

            return "Guid";

        case DbType.Int16:

            return "short";

        case DbType.Int32:

            return "int";

        case DbType.Int64:

            return "long";

        case DbType.Object:

            return "object";

        case DbType.SByte:

            return "sbyte";

        case DbType.Single:

            return "float";

        case DbType.String:

            return "string";

        case DbType.StringFixedLength:

            return "string";

        case DbType.Time:

            return "TimeSpan";

        case DbType.UInt16:

            return "ushort";

        case DbType.UInt32:

            return "uint";

        case DbType.UInt64:

            return "ulong";

        case DbType.VarNumeric:

            return "decimal";

        case DbType.Xml:

            return "string";

        default:

            return "object";

    }

}

</script>