
@model USP.Models.Entity.Commodity
@{
    ViewBag.Title = "Index";
}

@section themes{
    <link href="~/Static/Css/shop/usp.commodity.index.css" rel="stylesheet" />
}

<div id="p" class="easyui-panel" style="width: 100%; height: 100%">
    <div class="panel panel-info">
        <div class="panel-heading">
            完善信息
            <button id="btnReturn" type="button" class="btn btn-primary btn-xs pull-right">返回</button>
        </div>
        <div class="panel-body panel-fit">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form form-horizontal" role="form">
                   @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <fieldset id="flt-baseInfo">
                        <legend>基础信息</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IncomeRate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.IncomeRate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IncomeRate, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Commission, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Commission, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Commission, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.MonthOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.MonthOrder, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MonthOrder, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CouponId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CouponId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CouponId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CouponCount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CouponCount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CouponCount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CouponLeft, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CouponLeft, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CouponLeft, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CouponDenomination, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CouponDenomination, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CouponDenomination, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CouponBeginTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CouponBeginTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.CouponBeginTime, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CouponEndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CouponEndTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.CouponEndTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                <input id="pictureUpload" type="file" name="pictureUpload" />
                                @Html.HiddenFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                <input id="typeCombobox" value="---请选择---">
                                @Html.HiddenFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DetailLink, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.DetailLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DetailLink, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TBKLink, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.TBKLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TBKLink, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CouponLink, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CouponLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CouponLink, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PromotionLink, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.PromotionLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PromotionLink, "", new { @class = "text-danger" })
                            </div>
                        </div>




                        <div class="form-group">
                            @Html.LabelFor(model => model.SellerId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.SellerId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SellerId, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.SellerWangWangName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.SellerWangWangName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SellerWangWangName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShopName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.ShopName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShopName, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.PlatformName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.PlatformName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PlatformName, "", new { @class = "text-danger" })
                            </div>
                        </div>




                    </fieldset>
                    <fieldset id="flt-createInfo">
                        <legend>创建信息</legend>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Reserve, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Reserve, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Reserve, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Creator, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Creator, new { htmlAttributes = new { @class = "form-control", value = ViewData["CurrentUser"] } })
                                @Html.ValidationMessageFor(model => model.Creator, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now } })
                                @Html.ValidationMessageFor(model => model.CreateTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Auditor, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Auditor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Auditor, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.AuditTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.AuditTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AuditTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Canceler, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Canceler, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Canceler, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CancelTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.CancelTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CancelTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        

                    </fieldset>
                    <div class="form-group form-actions">
                        <div class="col-md-offset-8 col-xs-1 ">
                            <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span>添加</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section scripts{
  @*  <script src="~/Static/Js/shop/usp.shop.commodity.index.js"></script>*@

    <script type="text/javascript">
     (function () {
    usp.namespace("usp.shop.commodity.index");
    usp.shop.commodity.index = {
        init: function (btnReturnId, basePage) {
            $(".datepicker").datetimepicker({
                format: 'YYYY-MM-DD'
            });

            usp.shop.commodity.index.eventInit.btnReturnInit(btnReturnId, basePage);
        },
        eventInit: {
            btnReturnInit: function (id, basePage) {
                $(id).on("click", function () {
                    location.href = basePage;
                    return false;
                });
            }
        },
        initFileUpload: function (id, uploadUrl, filename, hiddenid) {
            $(id).fileinput({
                language: 'zh', //设置语言
                uploadUrl: uploadUrl, //上传的地址
                allowedFileExtensions: ['jpg', 'png', 'gif'], //接收的文件后缀
                showUpload: false, //是否显示上传按钮
                showCaption: false, //是否显示标题
                browseClass: "btn btn-primary", //按钮样式
                previewFileIcon: "<i class='glyphicon glyphicon-king'></i>",
                initialPreview: [ //预览图片的设置
                    "<img src='" + filename + "' class='file-preview-image' >"
                ]
            });
            $(id).on("fileuploaded", function (event, data, previewId, index) {
                if (data.jqXHR.responseJSON.IsSuccess) {
                    $(hiddenid).val(data.jqXHR.responseJSON.FileName);
                } else {
                    toastr.error(data.jqXHR.responseJSON.Msg);
                }
            });
        }
    }
})(this);
        $(function () {
            usp.init();
            $('#typeCombobox').combotree({
                url: '/ShoppingMall/ComodityType/Index?actionName=Tree',
                required: true,
                onChange: function (newValue, oldValue) {
                    $("#Type").val(newValue)
                }
            });
            if ($("#Type").val()) {
                $('#typeCombobox').combotree("setValue", $("#Type").val());
            }
            usp.shop.commodity.index.initFileUpload('#pictureUpload', "../../System/FileUpload/Upload", '@Model.Picture', "#Picture")
            usp.commodity.index.init(
                "#btnReturn",
                "/ShoppingMall/Commodity/Index"
                );
        })
    </script>
}

